basePath: /
definitions:
  controllers.CreateTaskInput:
    properties:
      descricao:
        type: string
      prazo_entrega:
        format: date-time
        type: string
      tempoEstimado:
        type: number
      titulo:
        type: string
    required:
    - titulo
    type: object
  controllers.CreateUserInput:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  controllers.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.TaskResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      descricao:
        type: string
      id:
        type: integer
      prazo_entrega:
        type: string
      recompensa_moedas:
        type: integer
      recompensa_xp:
        type: integer
      repetitiva:
        type: boolean
      status:
        $ref: '#/definitions/models.TaskStatus'
      tempo_estimado:
        type: number
      titulo:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.TaskStatus:
    enum:
    - pendente
    - andamento
    - concluida
    - atrasada
    - urgente
    type: string
    x-enum-varnames:
    - PENDENTE
    - ANDAMENTO
    - CONCLUIDA
    - ATRASADA
    - URGENTE
  models.UserResponse:
    properties:
      coins:
        type: integer
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
      xp:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Esta é uma API de exemplo com autenticação JWT
  title: API Exemplo
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Faz login e retorna um token JWT
      parameters:
      - description: Credenciais de Login
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login de usuário
      tags:
      - auth
  /me:
    get:
      description: Retorna informações do usuário com base no token JWT
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Retorna os dados do usuário autenticado
      tags:
      - users
  /tasks:
    post:
      consumes:
      - application/json
      description: Cria uma nova tarefa para o usuário autenticado
      parameters:
      - description: Dados da nova tarefa
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateTaskInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TaskResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Criar nova tarefa
      tags:
      - tasks
  /tasks/{id}:
    delete:
      description: Deleta uma tarefa do usuário autenticado com base no ID
      parameters:
      - description: ID da Tarefa
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Tarefa deletada com sucesso
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Deletar tarefa
      tags:
      - tasks
  /users:
    post:
      consumes:
      - application/json
      description: Endpoint para criar um novo usuário
      parameters:
      - description: Dados do Usuário
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria um novo usuário
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
